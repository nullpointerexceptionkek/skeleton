---
import { Menu as IconMenu, X as IconClose } from 'lucide-react';

interface DrawerProps {
	navigation?: {
		href: string;
		label: string;
		target: string;
	}[];
	base?: string;
	classes?: string;
}

const {
	base = 'xl:hidden preset-filled-surface-100-900 shadow-xl fixed top-0 left-0 bottom-0 z-50 w-[320px] p-4 pb-24 space-y-10 overflow-y-auto transition-transform duration-100 -translate-x-[320px]',
	classes = ''
}: DrawerProps = Astro.props;
---

{/* Drawer */}
<div class={`${base} ${classes}`} id="drawer">
	<!-- Header -->
	<header class="flex justify-between items-center">
		<h2 class="h3">Skeleton</h2>
		<button class="btn-icon" data-drawer-toggle>
			<IconClose />
		</button>
	</header>
	<!-- Slot -->
	<slot />
</div>

{/* Hamburger Menu */}
<button class="xl:hidden btn-icon" data-drawer-toggle>
	<IconMenu />
</button>

<script>
	// CSS classes such as `h-screen` causes an unintended gap below the viewport on smaller screens, this is a temporary fix.
	function setDrawerHeight() {
		const drawer = document.querySelector('#drawer');
		if (!drawer) return;
		(drawer as HTMLElement).style.height = `${window.innerHeight}px`;
	}
	function initializeEventHandlers() {
		setDrawerHeight();
		window.addEventListener('resize', setDrawerHeight);
		const triggers = document.querySelectorAll('[data-drawer-toggle], #drawer a');
		triggers.forEach((elem) => {
			elem.addEventListener('click', () => {
				const drawer = document.querySelector('#drawer');
				if (!(drawer instanceof HTMLElement)) {
					return;
				}
				drawer.classList.toggle('-translate-x-[320px]');
			});
		});
	}
	initializeEventHandlers();
	document.addEventListener('astro:after-swap', () => {
		initializeEventHandlers();
	});
</script>
